(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{227:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/tech-bird/p/3525336.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关文档"),s("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"反射"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反射","aria-hidden":"true"}},[this._v("#")]),this._v(" 反射")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"class类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class类","aria-hidden":"true"}},[this._v("#")]),this._v(" Class类")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("对于每个类而言，JRE 都为其保留一个不变的 Class 类型的对象。一个 Class 对象包含了特定某个类的有关信息。")]),t._v(" "),s("li",[t._v("Class 对象只能由系统建立对象")]),t._v(" "),s("li",[t._v("一个类在 JVM 中只会有一个Class实例")]),t._v(" "),s("li",[t._v("每个类的实例都会记得自己是由哪个 Class 实例所生成")]),t._v(" "),s("li",[t._v("Class是用于描述类的类，记录了类的相关信息(属性，方法，构造器等)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"获取class对象方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取class对象方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取Class对象方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("通过类获取：Class class = Person.class")]),this._v(" "),e("li",[this._v("通过对象获取：Person obj = new Person();Class class = obj.getClass()")]),this._v(" "),e("li",[this._v('通过全名获取：Class class = Class.forName("cn.zyb.array.Person")')])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"描述类的方法：method"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描述类的方法：method","aria-hidden":"true"}},[this._v("#")]),this._v(" 描述类的方法：Method")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("getMthods: 获取所有方法，包括从父类继承的方法，但不能获取private方法，可以获取到静态方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" Class cls = Dog.class();\n Method[] methods = cls.getMethods();\n for(Method method:methods){\n     System.out.print(method.getName());\n }\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("getDeclaredMthods: 获取当前类的所有方法，包括private方法，可以获取到静态方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" Class cls = Dog.class();\n Method[] methods = cls.getDeclaredMthods();\n for(Method method:methods){\n     System.out.print(method.getName());\n }\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("获取指定方法\n"),e("ol",[e("li",[this._v("getDeclaredMethod(): 获取当前类的方法，不能获取到继承的方法")]),this._v(" "),e("li",[this._v("getMethod(): 获取当前类和继承的方法，不能获取到 private 方法")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(' Class clazz = dog.getClass();\n try {\n     Method method = clazz.getDeclaredMethod("run", null);\n    // Method method = clazz.getDeclaredMethod("setName", String.class);\n    // Method method = clazz.getDeclaredMethod("setAge", int.class);\n     System.out.println(method);\n }catch (Exception e) {\n     System.out.println(e.toString());\n }\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("执行指定方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("method:获取到的指定方法\n// method.setAccesible(true); 如果method是private修饰\n// obj：执行哪个对象的方法； params：传入的参数\nmethod.invoke(obj,pramas);\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"描述类的属性-field"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描述类的属性-field","aria-hidden":"true"}},[this._v("#")]),this._v(" 描述类的属性: Field")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("getDeclaredFields: 可以获取到当前类的所有字段，包括private字段，但不能获取到父类的字段")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(' Field[] fields = clazz.getDeclaredFields();\n for(Field field: fields){\n     System.out.print(" "+ field.getName());\n }\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v('getDeclareField("name"): 获取指定字段')])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(' try {\n     Field field = clazz.getDeclaredField("height");\n     field.setAccessible(true); // 获取private修饰的字段\n     System.out.println(field.get(obj)); // obj:获取哪个对象的属性\n     System.out.println(field.set(obj,value)); // obj:设置哪个对象的属性\n } catch (Exception e) {\n     System.out.println(e.toString());\n }\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"描述类的构造器：construcor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描述类的构造器：construcor","aria-hidden":"true"}},[this._v("#")]),this._v(" 描述类的构造器：Construcor")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"描述类的注解：annotation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描述类的注解：annotation","aria-hidden":"true"}},[this._v("#")]),this._v(" 描述类的注解：Annotation")])}],!1,null,null,null);r.options.__file="反射.md";e.default=r.exports}}]);