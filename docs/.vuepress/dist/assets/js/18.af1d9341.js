(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{189:function(a,t,l){"use strict";l.r(t);var e=l(0),v=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,l=a._self._c||t;return l("div",{staticClass:"content"},[l("h1",{attrs:{id:"基本语法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#基本语法","aria-hidden":"true"}},[a._v("#")]),a._v(" 基本语法")]),a._v(" "),l("h2",{attrs:{id:"注释"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#注释","aria-hidden":"true"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),l("ul",[l("li",[a._v("单行注释  //")]),a._v(" "),l("li",[a._v("多行注释  /* */")]),a._v(" "),l("li",[a._v("文档注释  /** */")])]),a._v(" "),l("h2",{attrs:{id:"标识符-变量名"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#标识符-变量名","aria-hidden":"true"}},[a._v("#")]),a._v(" 标识符(变量名)")]),a._v(" "),l("ul",[l("li",[a._v("大小写敏感")]),a._v(" "),l("li",[a._v("字母、数字、下划线、$开头")]),a._v(" "),l("li",[a._v("不能包含_、$之外的特殊字符")]),a._v(" "),l("li",[a._v("java采用的是unicode字符集，而不是ASCII字符集")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v('int num = 1;\nint $name = "java";\n')])])]),l("h2",{attrs:{id:"关键字-保留字"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#关键字-保留字","aria-hidden":"true"}},[a._v("#")]),a._v(" 关键字/保留字")]),a._v(" "),l("p",[l("img",{attrs:{src:"/img/java-keywords.jpg",alt:"关键字"}})]),a._v(" "),l("h2",{attrs:{id:"变量声明"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#变量声明","aria-hidden":"true"}},[a._v("#")]),a._v(" 变量声明")]),a._v(" "),l("ul",[l("li",[a._v("变量的本质是可操作的存储空间，空间位置是固定的，但存放的值是变化的，类似车位")]),a._v(" "),l("li",[a._v("格式: tyle varName [= value]")]),a._v(" "),l("li",[a._v("必须以分号结束")]),a._v(" "),l("li",[a._v("使用变量前必须声明")]),a._v(" "),l("li",[a._v("未初始化的变量不能使用")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("int age;\nint age = 18;\nint age,year;\ndouble salary = 1800;\n")])])]),l("h2",{attrs:{id:"变量分类"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#变量分类","aria-hidden":"true"}},[a._v("#")]),a._v(" 变量分类")]),a._v(" "),l("ul",[l("li",[a._v("局部变量: 方法内或语句块内定义的变量\n"),l("ul",[l("li",[a._v("java支持语句块")])])]),a._v(" "),l("li",[a._v("成员变量: 方法外部、类的内部定义的变量，从属于对象\n"),l("ul",[l("li",[a._v("如果声明未赋值会自动初始化")]),a._v(" "),l("li",[a._v("int => 0, double => 0.0, char => '\\u0000'(空字符),\nboolean => false, 引用类型 => null")])])]),a._v(" "),l("li",[a._v("静态变量: 使用static定义，从属于类，生命周期伴随类始终，从加载到卸载")])]),a._v(" "),l("h2",{attrs:{id:"常量"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#常量","aria-hidden":"true"}},[a._v("#")]),a._v(" 常量")]),a._v(" "),l("ul",[l("li",[a._v("final 关键字声明,常量初始化不能被修改"),l("br"),a._v(" "),l("code",[a._v('final String NAME = "java"; final int MAX_VALUE = 100;')])])]),a._v(" "),l("h2",{attrs:{id:"数据类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),l("p",[l("img",{attrs:{src:"/img/java-data-type.jpg",alt:"数据类型"}})]),a._v(" "),l("ul",[l("li",[a._v("基本数据类型\n"),l("ol",[l("li",[a._v("数值型\n"),l("img",{attrs:{src:"/img/java-int.jpg",alt:"整型"}}),a._v(" "),l("ul",[l("li",[a._v("整型: byte short int long")]),a._v(" "),l("li",[a._v("浮点型: float double\n"),l("ul",[l("li",[a._v("float: 单精度，精确到小数点后7位")]),a._v(" "),l("li",[a._v("double: 双精度，精确到小数点后14位")]),a._v(" "),l("li",[a._v("浮点数默认是 double\n"),l("code",[a._v("float num = 3.14e2F; double num = 3.14e-2D;")])])])])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("float a = 0.1F;\ndouble b = 1.0/10;\na == b; => false;\n注意：浮点数不精确，不能用于比较，可以使用java.math包中的 BigDecimal 进行比较\n")])])])]),a._v(" "),l("li",[a._v("字符型(char)")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("char a = 'A';\n")])])]),l("ol",{attrs:{start:"3"}},[l("li",[a._v("布尔型(boolean)")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("true & false 在内存中占一位(不是一个字节)，不可以使用0或者非零的整数替代\n")])])])]),a._v(" "),l("li",[a._v("引用数据类型\n"),l("ol",[l("li",[a._v("类(class)")]),a._v(" "),l("li",[a._v("接口(interface)")]),a._v(" "),l("li",[a._v("数组")])])])]),a._v(" "),l("h2",{attrs:{id:"常用进制"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#常用进制","aria-hidden":"true"}},[a._v("#")]),a._v(" 常用进制")]),a._v(" "),l("ul",[l("li",[a._v("十进制 int a = 15;  => 15")]),a._v(" "),l("li",[a._v("八进制 int a = 015; => 13")]),a._v(" "),l("li",[a._v("十六进制 int a = 0x15; => 21")]),a._v(" "),l("li",[a._v("二进制 int a = 0b1101; => 13")])]),a._v(" "),l("h2",{attrs:{id:"运算符"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#运算符","aria-hidden":"true"}},[a._v("#")]),a._v(" 运算符")]),a._v(" "),l("ul",[l("li",[a._v("算术运算符\n"),l("ol",[l("li",[a._v("一元运算符")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("int a = 1;\nint b = a++; => a=2;\n// int c = ++a; => a=2;\nb => 1;\n// c => 2;\n")])])]),l("ol",{attrs:{start:"2"}},[l("li",[a._v("二元运算符(+ - * / %)\n"),l("ol",[l("li",[a._v("如果两个数有一个是 double，结果也为 double")]),a._v(" "),l("li",[a._v("如果两个数都为 float，结果也为 float")]),a._v(" "),l("li",[a._v("如果两个数有一个为 long，结果也为 long")]),a._v(" "),l("li",[a._v("没有 long 时，结果为 int，即使两个数全是 short,byte，结果也是 int")])])]),a._v(" "),l("li",[a._v("三元运算符"),l("br"),a._v(" "),l("code",[a._v("boolean bool = true; int a = bool ? 1 : 0;")])])])]),a._v(" "),l("li",[a._v("赋值运算符")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("int a = 1;\nint a+=4;\nint c%4;\nint a *=b+3 => a = a*(b+3);\n")])])]),l("ul",[l("li",[a._v("关系运算符"),l("br"),a._v(" "),l("code",[a._v("== != > >= < <=")])]),a._v(" "),l("li",[a._v("逻辑运算符 & 短路运算符\n"),l("ul",[l("li",[a._v("逻辑与 &: int bool = a>1 & b==2;")]),a._v(" "),l("li",[a._v("逻辑或 |: int bool = a>1 | b==2;")]),a._v(" "),l("li",[a._v("取反 !: int bool = !a;")]),a._v(" "),l("li",[a._v("短路与 &&: 只要有一个为false，则直接返回false，并且不进行第二个操作数的判断")]),a._v(" "),l("li",[a._v("短路或 ||: 只要有一个为true，则直接返回true，并且不进行第二个操作数的判断")]),a._v(" "),l("li",[a._v("异或 ^: 相同为false，不同为true")])])]),a._v(" "),l("li",[a._v("位运算符")])]),a._v(" "),l("h2",{attrs:{id:"类型转换"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#类型转换","aria-hidden":"true"}},[a._v("#")]),a._v(" 类型转换")]),a._v(" "),l("p",[l("img",{attrs:{src:"/img/java-data-type-transform.jpg",alt:"类型转换"}})]),a._v(" "),l("ul",[l("li",[a._v("隐式转换: 容量小的数据类型可以自定转换容量大的数据类型")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("int str = 'a'; => str=2\ndouble b = str;\n")])])]),l("ul",[l("li",[a._v("强制转换")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("double pi = 3.54;\nint a = (int)pi; => 3\n")])])])])}],!1,null,null,null);v.options.__file="基本语法.md";t.default=v.exports}}]);